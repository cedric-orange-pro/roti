version: '3.8'

services:
  # Service pour l'application ROTI
  roti-app:
    build: .
    ports:
      - "${DOCKER_PROD_PORT:-3002}:${PORT:-3001}"   # API Backend + Frontend en production
    volumes:
      - ./data:/app/data  # Persistance de la base de données SQLite
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3001}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - JWT_SECRET=${JWT_SECRET:-roti-secret-key-2025}
    restart: unless-stopped
    networks:
      - roti-network

  # Service pour le développement avec hot reload
  roti-dev:
    build: .
    ports:
      - "${PORT:-3001}:${PORT:-3001}"   # API Backend
      - "${DOCKER_DEV_PORT:-5174}:5173"   # Frontend Vite (dev)
    volumes:
      - ./data:/app/data  # Persistance de la base de données SQLite
      - ./src:/app/src    # Hot reload pour le développement
      - ./public:/app/public
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-3001}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - JWT_SECRET=${JWT_SECRET:-roti-secret-key-2025}
    command: npm run dev:full
    restart: unless-stopped
    networks:
      - roti-network
    profiles:
      - development

networks:
  roti-network:
    driver: bridge

volumes:
  roti-data:
    driver: local
